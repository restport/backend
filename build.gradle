plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'resport'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // 유효성 검사
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // springBoot 세팅
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    // Websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.webjars:sockjs-client:1.1.2'
    implementation 'org.webjars:stomp-websocket:2.3.4'
    // Actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus' // Prometheus 연동을 위한 Micrometer 의존성
    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    // H2
    runtimeOnly 'com.h2database:h2'
    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'
    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // ⭐ Spring boot 3.x이상에서 QueryDsl 패키지를 정의하는 방법
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation 'com.querydsl:querydsl-apt'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // logstash
    implementation("net.logstash.logback:logstash-logback-encoder:7.4")
    // micrometer
    implementation 'io.micrometer:micrometer-core'
    implementation("org.springframework.boot:spring-boot-starter-aop")
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

clean {
    delete file('src/main/generated')
}

tasks.withType(Test) {
    // MeettifyApplicationTests 테스트만 제외
    exclude '**/MeettifyApplicationTests*'
}

springBoot {
    buildInfo()
}